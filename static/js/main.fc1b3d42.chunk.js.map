{"version":3,"sources":["serviceWorker.js","utils/kirby.js","components/Canvas/Canvas.component.jsx","utils/use-device-orientation.js","components/App/App.component.jsx","index.js"],"names":["Boolean","window","location","hostname","match","TAU","Zdog","canvasElementClassName","addEyeToFace","face","rate","eyeGroup","Group","addTo","translate","x","y","rotate","Ellipse","width","height","stroke","color","fill","z","addCheeckToFace","initIllo","illo","Illustration","element","concat","zoom","body","Anchor","addFaceToBody","Shape","addBodyToIllo","path","bezier","addMouthToFace","useKirby","illoRef","useRef","_useState","useState","_useState2","Object","slicedToArray","sensitivity","setSensitivity","useEffect","updateRenderGraph","current","moveKirby","useCallback","incrementX","incrementY","Canvas","deviceOrientation","setDeviceOrientation","console","log","handleDeviceoOrientation","e","alpha","beta","gamma","addEventListener","removeEventListener","useDevicxeOrientation","_useKirby","react_default","a","createElement","Fragment","style","padding","onClick","className","innerWidth","innerHeight","App","Canvas_component","ReactDOM","render","App_component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc1b3d42.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { useEffect, useRef, useCallback, useState } from 'react';\nimport Zdog from 'zdog';\n\n// colors\nconst COLOR_PINK = '#F8B';\nconst COLOR_BLUSH = '#F5A';\nconst COLOR_BLACK = '#333';\nconst COLOR_RED = '#D03';\n\n// SIZE\nconst ZOOM = 3;\nconst BODY_STROKE = 22;\n\n// SENSITIVITY\nconst SENSITIVITY = 1;\n\n// 1 TAU = 1 round\nvar TAU = Zdog.TAU;\n\nlet canvasElementClassName = 'kirby-face-canvas';\n\nconst setCanvasElementClassName = v => (canvasElementClassName = v);\n\nconst generateIllo = () =>\n\tnew Zdog.Illustration({\n\t\telement: `.${canvasElementClassName}`,\n\t\tzoom: ZOOM\n\t});\n\nconst addBodyToIllo = illo =>\n\tnew Zdog.Shape({\n\t\tstroke: BODY_STROKE,\n\t\taddTo: illo,\n\t\tcolor: COLOR_PINK\n\t});\n\nconst addFaceToBody = body =>\n\tnew Zdog.Anchor({\n\t\ttranslate: { z: 10.5 },\n\t\taddTo: body\n\t});\n\nconst addEyeToFace = (face, rate) => {\n\tconst eyeGroup = new Zdog.Group({\n\t\taddTo: face,\n\t\ttranslate: { x: 2.4 * rate, y: -2 },\n\t\trotate: { x: 0.1 }\n\t});\n\t// eye\n\tnew Zdog.Ellipse({\n\t\twidth: 1.4,\n\t\theight: 5.5,\n\t\taddTo: eyeGroup,\n\t\tstroke: 1,\n\t\tcolor: COLOR_BLACK,\n\t\tfill: true\n\t});\n\t// eye highlight\n\tnew Zdog.Ellipse({\n\t\twidth: 1,\n\t\theight: 2,\n\t\taddTo: eyeGroup,\n\t\ttranslate: { y: -1.5, z: 0.5 },\n\t\tstroke: 0.5,\n\t\tcolor: '#FFF',\n\t\tfill: true\n\t});\n};\n\nconst addCheeckToFace = (face, rate) => {\n\tnew Zdog.Ellipse({\n\t\twidth: 2.5,\n\t\theight: 1,\n\t\ttranslate: { x: 5.7 * rate, y: 1.5, z: -1 },\n\t\trotate: { y: -10 * rate },\n\t\taddTo: face,\n\t\tcolor: COLOR_BLUSH,\n\t\tstroke: 1\n\t});\n};\n\nconst addMouthToFace = face => {\n\t// mouth\n\tnew Zdog.Shape({\n\t\tpath: [\n\t\t\t{ x: 0, y: 0 },\n\t\t\t{\n\t\t\t\tbezier: [\n\t\t\t\t\t{ x: 1.1, y: 0 },\n\t\t\t\t\t{ x: 1.1, y: 0.2 },\n\t\t\t\t\t{ x: 1.1, y: 0.5 }\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tbezier: [\n\t\t\t\t\t{ x: 1.1, y: 1.1 },\n\t\t\t\t\t{ x: 0.2, y: 1.8 },\n\t\t\t\t\t{ x: 0, y: 1.8 }\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tbezier: [\n\t\t\t\t\t{ x: -0.2, y: 1.8 },\n\t\t\t\t\t{ x: -1.1, y: 1.1 },\n\t\t\t\t\t{ x: -1.1, y: 0.5 }\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ bezier: [{ x: -1.1, y: 0.2 }, { x: -1.1, y: 0 }, { x: 0, y: 0 }] }\n\t\t],\n\t\taddTo: face,\n\t\ttranslate: { y: 2, z: -0.5 },\n\t\tstroke: 1,\n\t\tcolor: COLOR_RED,\n\t\tfill: true\n\t});\n};\n\nexport const initIllo = () => {\n\tconst illo = generateIllo();\n\tconst body = addBodyToIllo(illo);\n\tconst face = addFaceToBody(body);\n\taddEyeToFace(face, 1);\n\taddEyeToFace(face, -1);\n\taddCheeckToFace(face, 1);\n\taddCheeckToFace(face, -1);\n\taddMouthToFace(face);\n\n\treturn illo;\n};\n\nexport const useKirby = canvasElementClassName => {\n\tconst illoRef = useRef(null);\n\tconst [sensitivity, setSensitivity] = useState(SENSITIVITY);\n\n\tuseEffect(() => {\n\t\tif (canvasElementClassName)\n\t\t\tsetCanvasElementClassName(canvasElementClassName);\n\n\t\tconst illo = initIllo();\n\t\tillo.updateRenderGraph();\n\t\tilloRef.current = illo;\n\t}, [canvasElementClassName]);\n\n\tconst moveKirby = useCallback(\n\t\t(incrementX, incrementY) => {\n\t\t\tconst illo = illoRef.current;\n\t\t\tillo.rotate.x += (TAU / 360) * -1 * incrementY * sensitivity;\n\t\t\tillo.rotate.y += (TAU / 360) * -1 * incrementX * sensitivity;\n\t\t\tillo.translate.x += incrementX * 0.1 * sensitivity;\n\t\t\tillo.translate.y += incrementY * 0.1 * sensitivity;\n\t\t\tillo.updateRenderGraph();\n\t\t},\n\t\t[illoRef, sensitivity]\n\t);\n\n\treturn { moveKirby, sensitivity, setSensitivity };\n};\n","import React, { useEffect } from 'react';\n\nimport { useDevicxeOrientation } from '../../utils/use-device-orientation';\nimport { useKirby } from '../../utils/kirby';\n\nconst CANVAS_ELEMENT_CLASS = 'kirby-canvas';\n\nconst Canvas = () => {\n\tconst { deviceOrientation } = useDevicxeOrientation();\n\tconst { moveKirby, sensitivity, setSensitivity } = useKirby(\n\t\tCANVAS_ELEMENT_CLASS\n\t);\n\n\tuseEffect(() => {\n\t\tif (!deviceOrientation) return;\n\n\t\tconst { beta, gamma } = deviceOrientation;\n\n\t\tmoveKirby(gamma, beta / 2);\n\t}, [deviceOrientation, moveKirby]);\n\n\treturn (\n\t\t<>\n\t\t\t<button style={{padding: '1rem'}} onClick={() => setSensitivity(sensitivity + 1)}>+</button>\n\t\t\t<span>{sensitivity}</span>\n\t\t\t<button style={{padding: '1rem'}}  onClick={() => setSensitivity(sensitivity - 1)}>-</button>\n\t\t\t<canvas\n\t\t\t\tclassName={CANVAS_ELEMENT_CLASS}\n\t\t\t\twidth={window.innerWidth}\n\t\t\t\theight={window.innerHeight}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default Canvas;\n","import { useEffect, useState } from 'react';\n\nexport const useDevicxeOrientation = () => {\n\tconst [deviceOrientation, setDeviceOrientation] = useState(null);\n\n\tuseEffect(() => {\n\t\tconsole.log('device orientation');\n\t\tconst handleDeviceoOrientation = e => {\n\t\t\tconst { alpha, beta, gamma } = e;\n\t\t\tconsole.log(deviceOrientation);\n\t\t\tsetDeviceOrientation({ alpha, beta, gamma });\n\t\t};\n\t\twindow.addEventListener('deviceorientation', handleDeviceoOrientation);\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\n\t\t\t\t'deviceorientation',\n\t\t\t\thandleDeviceoOrientation\n\t\t\t);\n\t\t};\n\t}, [deviceOrientation]);\n\n\treturn { deviceOrientation };\n};\n","import React from 'react';\nimport Canvas from '../Canvas/Canvas.component';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>korokoro kirby</h1>\n\t\t\t<Canvas />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './sass/main.scss';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App/App.component';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}